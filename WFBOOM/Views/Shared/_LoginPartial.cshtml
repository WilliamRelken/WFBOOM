@using Microsoft.AspNetCore.Identity
@using WFBOOM.Areas.Identity.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{

    <!--
    <ul class="navbar-nav">


        <li class="nav-item">
            <button id="manage" class="btn btn-outline-dark display-4" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</button>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="btn btn-outline-dark display-4">Logout</button>
            </form>
        </li>

    </ul>-->

    <div class="btn-group" role="group">
        <a asp-area="Identity" asp-page="/Account/Manage/Index" class="btn btn-secondary display-4">Hello @UserManager.GetUserName(User)!</a>
        
        
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="btn btn-warning display-4">Logout</button>
        </form>
        
    </div>

}
else
{
    <div class="navbar-buttons mbr-section-btn">

        <div class="btn-group" role="group">
            <a asp-area="Identity" asp-page="/Account/Login" class="btn btn-secondary display-4">Log In</a>
            <a asp-area="Identity" asp-page="/Account/Register" class="btn btn-warning display-4">Register</a>
        </div>
    </div>
}
